@charset "utf-8";  @import "actions.less"; @import "datalists.less"; * {-oxy-display-tags: none;} TEI:before{content: oxy_editor(type, button, actionID, "addFirstAccentuationSection", transparent, true, visible, oxy_xpath("count(//entry/form[contains(' unknown-accentuation accentuation-variant ', @type)]) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstArticulationSection", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'articulation']) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstPronunciationSection", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'pronunciation']) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstWritingSection", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'writing']) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstAbbreviationSection", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'abbreviation']) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstGrammaticalInformationSection", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'grammatical-information']) = 0"), color, blue)  oxy_editor(type, button, actionID, "addFirstLexicalVariant", transparent, true, visible, oxy_xpath("count(//entry/form[@type = 'lexical-variant-section']) = 0"), color, blue);}
form[type = 'grammatical-information']:before{content: "Indicații gramaticale" oxy_editor(type, button, actionID, "addGrammaticalInformationSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true) "\00000A";}
xr[type = 'trimitere']:before{content: "Trimitere (cuvânt titlu | nr. ordine omonim | nr. ordine sens) " oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
xr[type = 'analog']:before{content: "Analogie (cuvânt titlu | nr. ordine omonim | nr. ordine sens) " oxy_editor(type, button, actionID, "insertAnalogy", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
xr[type = 'asoc']:before{content: "Asociație (cuvânt titlu | nr. ordine omonim | nr. ordine sens) " oxy_editor(type, button, actionID, "insertAssociation", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
xr[type = 'antonim']:before{content: "În  opoziţie cu (cuvânt titlu | nr. ordine omonim | nr. ordine sens) " oxy_editor(type, button, actionID, "insertAntonym", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
etym:before{content: oxy_editor(type, button, actionID, "addEtymElement", transparent, true)  oxy_editor(type, button, actionID, "insertCfElements", visible, oxy_xpath("idno[1]/@type = 'cuvântul.titlu-element.de.substrat'"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("idno[1]/@type = 'cuvântul.titlu-element.de.substrat'"), showIcon, false)  oxy_editor(type, button, actionID, "addGrammaticalInformationSection", visible, oxy_xpath("idno[starts-with(@type, 'cuvântul.titlu-formație.internă-trimitere-')] and count(form[@type = 'grammatical-information']) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "addEtymonTranslation", visible, oxy_xpath("idno[1][starts-with(@type, 'una.sau.mai.multe.variante.lexicale-')] and count(term[@type = 'translation']) = 0"))  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(//entry/etym) > 1"));}
etym > idno:first-of-type{content: "\00000A Etimologie pentru "   oxy_editor(type, text, edit, "@type", values, @etym-options, columns, 80);}
etym > idno[type ^= 'variantă-directă-etimon variantă-'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3) "Nr. sens " oxy_editor(type, text, edit, "@type", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-singular.refăcut.după.plural'] ~ term{content: "Singular refăcut după plural " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-formație.onomatopeică'] ~ term{content: "Formaţie onomatopeică " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-formație.spontană.de.la'] ~ term{content: "Formaţie spontană de la " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-prin.figură.etimologică.de.la'] ~ term{content: "Prin figură etimologică de la " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-contragere'] ~ term{content: "Contras din " oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-din.formulă.de.urare'] ~ term{content: "Din formulă de urare " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-format.după'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-denumire.comercială'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-compus-formație.savantă.din.latină'] ~ term:first-of-type:after{content: "lat." oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-compus-formație.savantă.din.latină'] ~ term:not( :first-of-type):after{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22)  oxy_editor(type, button, actionID, "insertAddedBase", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/term) >= 3"));}
etym > idno[type = 'cuvântul.titlu-formație.internă-compus-format.din'] ~ term[type = 'cuvântul.titlu-formație.internă-compus-format.din-bază']:after{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-compus-format.din'] ~ term[type = 'cuvântul.titlu-formație.internă-compus-format.din-element adăugat']:after{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22)  oxy_editor(type, button, actionID, "insertTermElementOfTypeElementAdăugat", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/term[@type = 'cuvântul.titlu-formație.internă-compus-format.din-element adăugat']) >= 2"));}
etym > term[type = 'translation']{content: "Traducere etimon" oxy_editor(type, text, edit, "#text", columns, 22) oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
etym > idno[type = 'variantă-directă-singular.refăcut.după.pluralul'] ~ term{content: "Sg. refăcut după pluralul " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-prin.apropiere.de'] ~ term{content: "Prin apropiere de " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-prin.derivare.cu.suf.'] ~ term{content: "Prin derivare cu sufix " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-sub.influența'] ~ term{content: "Sub influenţa " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-etimologie.populară.prin.apropiere.de'] ~ term{content: "Etimologie populară prin apropiere de " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-din.lat.'] ~ term{content: "Din lat. " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'variantă-directă-prin.confuzie.cu'] ~ term{content: "Prin confuzie cu " oxy_editor(type, text, edit, "#text", columns, 5);}
etym > idno[type ^= 'una.sau.mai.multe.variante.lexicale-'][type $= '-trimitere-cf.cuvânt'] ~ ptr{content: "Cf. " oxy_editor(type, text, edit, "#text", columns, 5);}
etym > idno[type ^= 'cuvântul.titlu-formație.internă-izolare-'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-trimitere-V.'] ~ ptr{content: "V. " oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3) "Nr. sens " oxy_editor(type, text, edit, "@type", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-trimitere-Cf.'] ~ ptr{content: "Cf. " oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3) "Nr. sens " oxy_editor(type, text, edit, "@type", columns, 3);}
etym > idno[type ^= 'cuvântul.titlu-formație.internă-trimitere-De la-'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3) "Nr. sens " oxy_editor(type, text, edit, "@type", columns, 3);}
etym > idno[type = 'cuvântul.titlu-element.extern-împrumut-etimon.neatestat(reconstruit)-etimon.neatestat(necunoscut)'] ~ term{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false) " etimon neatestat (necunoscut) " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-element.extern-împrumut-etimon.neatestat(reconstruit)-etimon.neatestat(reconstruit).v.sl.*'] ~ term{content: "etimon neatestat (reconstruit) v. sl. * " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type ^= 'cuvântul.titlu-formație.internă-trimitere-Din-'] ~ term{content: oxy_editor(type, text, edit, "#text", columns, 22) "Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3) "Nr. sens " oxy_editor(type, text, edit, "@type", columns, 3);}
etym > idno[type = 'cuvântul.titlu-element.extern-calc'] ~ term{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false) " Calc după " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-element.necunoscut'] ~ term{content: "Et. nec.";}
etym > idno[type = 'unul.sau.mai.multe.sensuri-explicarea.sensului-cf.izvor'] ~ ptr:after{content: "Număr de sens " oxy_editor(type, combo, edit, "@target", values, oxy_xpath("string-join(//sense/@xml:id, ',')"), labels, oxy_xpath("string-join(//sense/idno[1]/@n, ',')"), editable, oxy_xpath("false"))  oxy_editor(type, button, actionID, "insertSenseNumber", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
etym > idno[type ^= 'unul sau mai multe sensuri-sensul-'] ~ ptr:after{content: "Număr de sens " oxy_editor(type, combo, edit, "@target", values, oxy_xpath("string-join(//sense/@xml:id, ',')"), labels, oxy_xpath("string-join(//sense/idno[1]/@n, ',')"), editable, oxy_xpath("false"))  oxy_editor(type, button, actionID, "insertSenseNumber", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
etym > idno[type = 'unul.sau.mai.multe.sensuri-sensul-cf.etimon'] ~ term:after{content: "Cf. " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'unul.sau.mai.multe.sensuri-sensul-cf.și.etimon'] ~ term:after{content: "Cf. și " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22);}
etym > mentioned{content: oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-element.extern-trimitere'] ~ mentioned{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false) " Cf. " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > certainty{content: "Probabilitate etimologie " oxy_editor(type, combo, edit, "@cert", values, "unknown,low,high", labels, ",probabil,sigur", columns, 22, editable, false);}
idno[type = 'cuvântul.titlu-element.de.substrat'] ~ mentioned{content: "Cf. " oxy_editor(type, combo, edit, "@xml:lang", values, ",alb.,lituan.,v. sl.", labels, ",alb.,lituan.,v. sl.", columns, 22, editable, false)  oxy_editor(type, text, edit, "#text", columns, 22);}
idno[type = 'cuvântul.titlu-element.de.substrat'] ~ term{content: "El. de substrat " oxy_editor(type, text, edit, "#text", columns, 22);}
idno[type = 'cuvântul.titlu-element.moştenit-etimon.atestat'] ~ term{content: "Lat. " oxy_editor(type, text, edit, "#text", columns, 22) "În funcţie de partea de vorbire se vor indica următoarele forme ale etimonului: pentru s./ subst. - Nom. şi Gen; pentru adj. - formele de m, f şi n.; pentru vb. - inf. lung ; pentru pron. - formele de Nom., Gen. şi Dat.; pentru num. - formele de m. şi f.; pentru art. - formele de m. şi f.";}
idno[type = 'cuvântul.titlu-element.moştenit-etimon.neatestat'] ~ term{content: "Lat. * " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'prefix']{content: "Prefix " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'base']{content: " Cuvânt de bază " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "α,β,γ,δ,ε,ζ,η,θ,ι,κ,λ,μ,ν,ξ,ο,π,ρ,ς,σ,τ,υ,φ,χ,ψ,ω", rows, 55) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3)  oxy_editor(type, button, actionID, "insertBaseWord", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/term[@type = 'base']) > 1"));}
etym > term[type = 'multiple-base']{content: " Cuvânt de bază " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3)  oxy_editor(type, button, actionID, "insertBaseWord", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/term[@type = 'base']) > 2"));}
etym > term[type = 'sufix']{content: "Sufix " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'component-element']{content: "Element de compunere " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-derivat.regresiv'] ~ term{content: "Derivat regresiv de la " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'variantă-directă-derivat.regresiv.de.la'] ~ term{content: "Derivat regresiv de la " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > idno[type = 'cuvântul.titlu-formație.internă-derivat.postverbal'] ~ term{content: "Derivat postverbal de la " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-prescurtare'] ~ term{content: "Prescurtat de la " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > idno[type = 'cuvântul.titlu-formație.internă-onomatopee'] ~ term{content: "Onomatopee " oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > term[type = 'contamination-element']{content: oxy_editor(type, text, edit, "#text", columns, 22) " Nr. omonim " oxy_editor(type, text, edit, "@subtype", columns, 3);}
etym > term[type = 'contaminated-element']{content: "Contaminare între " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'alternative-contaminated-element']{content: oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'contaminated-element'] ~ term[type = 'contamination-element']{content: " şi " oxy_editor(type, text, edit, "#text", columns, 22);}
etym > term[type = 'contaminated-element'] ~ term[type = 'alternative-contamination-element']{content: oxy_editor(type, text, edit, "#text", columns, 22)  oxy_editor(type, button, actionID, "insertAlternativeEtymon", transparent, true)  oxy_editor(type, button, actionID, "deleteContaminationElement", transparent, true, visible, oxy_xpath("count(parent::*/term[@type = 'alternative-contamination-element']) > 1"));}
etym > idno[type = 'cuvântul.titlu-element.extern-împrumut-etimon.sigur'] ~ term{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false) "tip etimon sigur " oxy_editor(type, combo, edit, "@type", values, "unknown,cuv. chinezesc,cuv. japonez,cuv. mongol,împrumut savant din greacă", labels, ",cuv. chinezesc,cuv. japonez,cuv. mongol,împrumut savant din greacă", columns, 22, editable, false) " etimon sigur " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "α,β,γ,δ,ε,ζ,η,θ,ι,κ,λ,μ,ν,ξ,ο,π,ρ,ς,σ,τ,υ,φ,χ,ψ,ω", rows, 55);}
etym > idno[type = 'cuvântul.titlu-formație.internă-calc'] ~ term{content: "Limba " oxy_editor(type, combo, edit, "ua:context()/@xml:lang", values, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", labels, ",alb.,arom.,bg.,cat.,ceh.,cr.,dalm.,ebr.,engad.,engl.,esper.,fr.,friul.,germ.,gr.,istr.,it.,lat.,lat. pop.,lat. mediev.,magh.,megl.,m. gr.,ngr.,pol.,port.,prov.,retorom.,rom.,rus.,săs.,sard.,sb.,sicil.,sl.,slavon.,slov.,sp.,tăt.,tc.,tc. dial.,ţig.,ucr.,vegl.,v. sl.", columns, 22, editable, false) " Calc după " oxy_editor(type, text, edit, "#text", columns, 22);}
xr[type = 'syn']:before{content: "Sinonim (cuvânt titlu | nr. ordine omonim | nr. ordine sens) " oxy_editor(type, button, actionID, "insertSynonym", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"));}
xr > ptr:before{content: oxy_editor(type, text, edit, "@target", columns, 22);}
usg:before{content: "Indicații privind folosirea: "   oxy_editor(type, text, edit, "@value", values, @usage-options, columns, 30)  oxy_editor(type, text, edit, "#text", columns, 22);}
pc:before{content: oxy_editor(type, combo, edit, "#text", values, ",\\,,;,și,sau", labels, ",\\,,;,și,sau", columns, 7, editable, false);}
usg:after{content: oxy_editor(type, button, actionID, "insertUsgElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
quote{content: "Citat: " oxy_editor(type, textArea, edit, "#text", columns, 70, rows, 7, contentType, "text/plain");}
bibl:before{content: "Izvor: " oxy_editor(type, combo, edit, "@type", values, "unknown,ap.,cf.,în,▭", labels, ",ap.,cf.,în,▭", columns, 5, editable, false);}
bibl > ptr:before{content: oxy_editor(type, text, edit, "@target", values, @bibliographic-entries, columns, 40)  oxy_editor(type, button, action, @searchBibliographicReference, transparent, true);}
bibl > date:before{content: oxy_editor(type, text, edit, "#text", columns, 10);}
bibl > citedRange:before{content: oxy_editor(type, text, edit, "#text", columns, 10);}
cit:before{content: "Atestare:" oxy_editor(type, button, actionID, "insertCitElement", transparent, true);}
cit:not( :first-of-type):before{content: "Atestare:" oxy_editor(type, button, actionID, "insertCitElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
gramGrp:before{content: "Categorie gramaticală:" oxy_editor(type, button, actionID, "addGramGrp", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("local-name(parent::*) = 'sense' or count(parent::*/gramGrp) > 1"));}
pos:before{content: "\00000AParte de vorbire*: " oxy_editor(type, combo, edit, "@value", values, ",adj.,adv.,art.,conj.,interj.,num.,prep.,pron.,s.,subst.,vb.", labels, ",adj.,adv.,art.,conj.,interj.,num.,prep.,pron.,s.,subst.,vb.", columns, 22, editable, false);}
gen:before{content: "Gen: " oxy_editor(type, combo, edit, "@value", values, ",f.,m.,m. şi f.", labels, ",f.,m.,m. şi f.", columns, 22, editable, false);}
pos[value = 's.'] ~ gen:before{content: "Gen: " oxy_editor(type, combo, edit, "@value", values, ",f.,m.,m. si f.,n.", labels, ",f.,m.,m. si f.,n.", columns, 22, editable, false);}
pos[value = 's.'] ~ number:before{content: "Număr: " oxy_editor(type, combo, edit, "@value", values, ",invar.,pl.,pl. tant.,sg.,sg. tant.,(la pl.),mai ales la pl.,(sg.),(pl.)", labels, ",,pl.,pl. tant.,sg.,sg. tant.,(la pl.),mai ales la pl.,(sg.),(pl.)", columns, 22, editable, false);}
pos[value = 'adj.'] ~ number:before{content: "Număr: " oxy_editor(type, combo, edit, "@value", values, ",invar.", labels, ",invar.", columns, 22, editable, false);}
case:before{content: "Caz: " oxy_editor(type, combo, edit, "@value", values, ",acuz.,dat.,gen.,gen.-dat.,nom.,voc.", labels, ",acuz.,dat.,gen.,gen.-dat.,nom.,voc.", columns, 22, editable, false);}
name:before{content: "Articulare: " oxy_editor(type, combo, edit, "@type", values, "unknown,(articulat),(mai ales art.),articulat", labels, ",(articulat),(mai ales art.),articulat", columns, 22, editable, false);}
pos[value = 'adj.'] ~ subc:before{content: "Tip: " oxy_editor(type, combo, edit, "@value", values, "adj.-empty,adj.-dem.,adj.-inter.-rel.,adj.-nehot.,adj.-pos.", labels, ",dem.,inter.-rel.,nehot.,pos.", columns, 22, editable, false);}
pos[value = 'art.'] ~ subc:before{content: "Tip: " oxy_editor(type, combo, edit, "@value", values, ",art.-adj.,art.-hot.,art.-nehot.,art.-pos.", labels, ",adj.,hot.,nehot.,pos.", columns, 22, editable, false);}
pos[value = 'num.'] ~ subc:before{content: "Tip: " oxy_editor(type, combo, edit, "@value", values, ",num.-adv.,num.-card.,num.-col.,num.-multipl.,num.-nehot.,num.-ord.", labels, ",adv.,card.,col.,multipl.,nehot.,ord.", columns, 22, editable, false);}
pos[value = 'pron.'] ~ subc:before{content: "Tip: " oxy_editor(type, combo, edit, "@value", values, ",pron.-dem.,pron.-inter.-rel.,pron.-întăr.,pron.-neg.,pron.-nehot.,pron.-pers.,pron.-pos.,pron.-refl.,pron.-de politeţe", labels, ",dem.,inter.-rel.,întăr.,neg.,nehot.,pers.,pos.,refl.,de politeţe", columns, 22, editable, false);}
pos[value='subst.'] ~ number:before, subc[value='pron.-dem.'] ~ number:before, subc[value='pron.-inter.-rel.'] ~ number:before, subc[value='pron.-nehot.'] ~ number:before, subc[value='pron.-pers.'] ~ number:before, subc[value='pron.-pos.'] ~ number:before, subc[value='pron.-de politeţe'] ~ number:before, subc[value='pron.-refl.'] ~ number:before{content: "Număr: " oxy_editor(type, combo, edit, "@value", values, ",pl.,sg.", labels, ",pl.,sg.", columns, 22, editable, false);}
subc[value='pron.-întăr.'] ~ per:before, subc[value='pron.-pers.'] ~ per:before, subc[value='pron.-pos.'] ~ per:before, subc[value='pron.-de politeţe'] ~ per:before, subc[value='pron.-refl.'] ~ per:before,
pos[value='adj.'] ~ subc[value='adj.-pos.'] ~ per:before{content: "Persoană: " oxy_editor(type, combo, edit, "@value", values, ",pers. 1,pers. 2,pers. 3", labels, ",pers. 1,pers. 2,pers. 3", columns, 22, editable, false);}
pos[value='vb.'] ~ iType:before{content: "Conjugare: " oxy_editor(type, combo, edit, "@value", values, ",I,II,III,IV", labels, ",I,II,III,IV", columns, 22, editable, false);}
pos[value='vb.'] ~ subc:before{content: "Diateză: " oxy_editor(type, combo, edit, "@value", values, ",vb.-(folosit şi absol.),vb.-absol.,vb.-fact.,vb.-intranz.,vb.-refl.,vb.-refl. impers.,vb.-refl. pos.,vb.-refl. recipr.,vb.-refl. unipers.,vb.-tranz.,vb.-tranz. fact.,vb.-intranz. şi refl.", labels, ",(folosit şi absol.),absol.,fact.,intranz.,refl.,refl. impers.,refl. pos.,refl. recipr.,refl. unipers.,tranz.,tranz. fact.,intranz. şi refl.", columns, 22, editable, false);}
form[type = 'unknown-accentuation'] > bibl:after, form[type = 'accentuation-variant'] > bibl:after, form[type = 'pronunciation'] > bibl:after, form[type = 'writing'] > bibl:after, form[type = 'grammatical-information-for-plural'] > bibl:after, form[type = 'grammatical-information-for-case'] > bibl:after, form[type = 'grammatical-information-for-verb'] > bibl:after, form[type = 'details-for-grammatical-information-for-verb'] > bibl:after, form[type = 'lexical-variant-section'] > bibl:after{content: oxy_editor(type, button, actionID, "insertBiblElement", transparent, true, visible, oxy_xpath("count(bibl) = 0"))  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'writing'] > oVar, form[type = 'lexical-variant-section'] > oVar, form[type = 'abbreviation'] > oVar{content: "Scris şi " oxy_editor(type, text, edit, "#text", columns, 40);}
form[type = 'grammatical-information-for-verb'] > mood{content: "\00000AMod " oxy_editor(type, combo, edit, "@value", values, ",ind.,conjunct.,cond.-opt.,imper.,ger.,part.", labels, ",ind.,conjunct.,cond.-opt.,imper.,ger.,part.", columns, 22, editable, false);}
form[type = 'grammatical-information-for-verb'] > tns{content: "Timp " oxy_editor(type, combo, edit, "@value", values, ",prez.,imperf.,perf. s.,perf. c.,m. m. perf.,viit.", labels, ",prez.,imperf.,perf. s.,perf. c.,m. m. perf.,viit.", columns, 22, editable, false);}
form[type = 'graphic-variant']:before{content: "Variantă grafică ";}
form[type = 'graphic-variant'] > orth:before{content: "Scris şi: " oxy_editor(type, text, edit, "#text", columns, 40);}
form[type = 'unknown-accentuation']:before, form[type = 'accentuation-variant']:before{content: "Accentuare " oxy_editor(type, combo, edit, "@type", values, "unknown-accentuation,accentuation-variant", labels, "necunoscută,variantă de accentuare", columns, 22, editable, false)  oxy_editor(type, button, actionID, "addAccentuationSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'articulation']:before{content: "Articulat " oxy_editor(type, button, actionID, "addArticulationSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'articulation'] > term:before{content: oxy_editor(type, text, edit, "#text", columns, 40);}
stress{content: "Variantă de accentuare " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55) "\00000A" oxy_editor(type, button, actionID, "insertUsgElement", visible, oxy_xpath("count(following-sibling::usg) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "insertBiblElement", visible, oxy_xpath("count(following-sibling::bibl) = 0"), showIcon, false);}
form[type = 'pronunciation']:before{content: "Pronunțare" oxy_editor(type, button, actionID, "addPronunciationSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true) "\00000AIndicaţie de silabaţie" oxy_editor(type, combo, edit, "@value", values, ",bisyllabic,trisyllabic", labels, ",bisilabic,trisilabic", columns, 22, editable, false)  oxy_editor(type, button, actionID, "addFirstSyllabationElement")  oxy_editor(type, button, actionID, "addFirstPronElement")  oxy_editor(type, button, actionID, "addFirstPVarElement")  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false);}
form[type = 'pronunciation'] > syll{content: "Silabația secvenței cu hiat " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55)  oxy_editor(type, button, actionID, "addSyllabationElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'pronunciation'] > pron{content: "Pronunțarea cuvântului titlu străin " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55)  oxy_editor(type, button, actionID, "addPronElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'pronunciation'] > pVar{content: "Pronunţat şi " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55)  oxy_editor(type, button, actionID, "addPVarElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'writing']:before{content: "Scriere" oxy_editor(type, button, actionID, "addWritingSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) > 0"), showIcon, false);}
form[type = 'abbreviation']:before{content: "Abreviere" oxy_editor(type, button, actionID, "addAbbreviationSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true)  oxy_editor(type, button, actionID, "insertFirstoVarElement", visible, oxy_xpath("count(oVar) = 0"), showIcon, false);}
form[type = 'abbreviation'] > abbr{content: "Abreviat " oxy_editor(type, text, edit, "#text", columns, 40);}
form[type = 'abbreviation'] > oVar{content: "Scris şi " oxy_editor(type, text, edit, "#text", columns, 40)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information'] > idno:first-of-type{content: "Indicații pentru " oxy_editor(type, combo, edit, "@type", values, "unknown,grammatical-information-type-for-adj-et-al,grammatical-information-type-for-vb", labels, ",adj. / pron. / num. / s. / subst.,vb.", columns, 22, editable, false);}
form[type = 'grammatical-information'] > idno:nth-of-type(2){content: oxy_editor(type, combo, edit, "@type", values, "unknown,grammatical-information-subtype-for-pl,grammatical-information-subtype-for-case,grammatical-information-subtype-for-gender", labels, ",pl.,caz,gen", columns, 22, editable, false);}
form[type = 'grammatical-information-for-plural'] > number{content: "Pl." oxy_editor(type, text, edit, "#text", columns, 22);}
form[type = 'grammatical-information-for-plural'] > gen:after{content: oxy_editor(type, button, actionID, "addGenElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-gender'] > gen:before{content: "Gen " oxy_editor(type, combo, edit, "@target", values, "unknown,m,f,n,m. şi f.", labels, ",m,f,n,m. şi f.", columns, 22, editable, false);}
form[type = 'grammatical-information-for-verb'] > per{content: "Persoană " oxy_editor(type, combo, edit, "@value", values, ",pers. 1,pers. 2,pers. 3,pers. 4,pers. 5,pers. 6", labels, ",pers. 1,pers. 2,pers. 3,pers. 4,pers. 5,pers. 6", columns, 22, editable, false);}
form[type = 'grammatical-information-for-verb'] > stress{content: "Variantă de accentuare " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55)  oxy_editor(type, button, actionID, "insertStressElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'details-for-grammatical-information-for-verb']:before{content: "Formă " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55) "\00000A";}
form[type = 'lexical-variant-section']:before{content: "Variantă lexicală " oxy_editor(type, button, actionID, "addLexicalVariant", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstSenseNumber", visible, oxy_xpath("count(ptr) = 0"))  oxy_editor(type, button, actionID, "addFirstAccentuationSection", visible, oxy_xpath("count(form[contains(' unknown-accentuation accentuation-variant ', @type)]) = 0"))  oxy_editor(type, button, actionID, "addFirstPronunciationSection", visible, oxy_xpath("count(form[@type = 'pronunciation']) = 0"))  oxy_editor(type, button, actionID, "addFirstWritingSection", visible, oxy_xpath("count(form[@type = 'writing']) = 0"))  oxy_editor(type, button, actionID, "addFirstAbbreviationSection", visible, oxy_xpath("count(form[@type = 'abbreviation']) = 0"))  oxy_editor(type, button, actionID, "addFirstGrammaticalInformationSection", visible, oxy_xpath("count(form[@type = 'grammatical-information']) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false);}
form[type = 'lexical-variant']:before{content: "\00000AVariantă lexicală" oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55);}
form[type = 'flexionar-variant']{content: "Var. flexionară " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "200", insertChars, "á,é,í,ó,ú,ắ,ấ,î́", rows, 55);}
form[type = 'grammatical-information-for-plural'] > ptr:after, form[type = 'grammatical-information-for-case'] > ptr:after{content: "Număr de sens " oxy_editor(type, combo, edit, "@target", values, oxy_xpath("string-join(//sense/@xml:id, ',')"), labels, oxy_xpath("string-join(//sense/idno[1]/@n, ',')"), editable, oxy_xpath("false"))  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-verb'] > ptr:after{content: "Număr de sens " oxy_editor(type, combo, edit, "@target", values, oxy_xpath("string-join(//sense/@xml:id, ',')"), labels, oxy_xpath("string-join(//sense/idno[1]/@n, ',')"), editable, oxy_xpath("false"));}
form[type = 'lexical-variant-section'] > ptr:after{content: "Număr de sens " oxy_editor(type, combo, edit, "@target", values, oxy_xpath("string-join(//sense/@xml:id, ',')"), labels, oxy_xpath("string-join(//sense/idno[1]/@n, ',')"), editable, oxy_xpath("false"))  oxy_editor(type, button, actionID, "insertSenseNumber", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'graphic-variant']:not( :first-of-type):before{content: "Variantă grafică "  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-plural']:before{content: "\00000AIndicaţii pentru plural" oxy_editor(type, button, actionID, "addGrammaticalInformationForPluralSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "addFirstGenElement", visible, oxy_xpath("count(gen) = 0"))  oxy_editor(type, button, actionID, "insertFirstSenseNumber", visible, oxy_xpath("count(ptr) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false);}
form[type = 'grammatical-information-for-plural']:not( :first-of-type):before {content: "\00000AIndicaţii pentru plural" oxy_editor(type, button, actionID, "addGrammaticalInformationForPluralSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "addFirstGenElement", visible, oxy_xpath("count(gen) = 0"))  oxy_editor(type, button, actionID, "insertFirstSenseNumber", visible, oxy_xpath("count(ptr) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-case']:before{content: "\00000AIndicaţii pentru caz" oxy_editor(type, button, actionID, "addGrammaticalInformationForCaseSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstSenseNumber", visible, oxy_xpath("count(ptr) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false);}
form[type = 'grammatical-information-for-case']:not( :first-of-type):before{content: "\00000AIndicaţii pentru caz" oxy_editor(type, button, actionID, "addGrammaticalInformationForCaseSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstSenseNumber", visible, oxy_xpath("count(ptr) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-case'] > case{content: oxy_editor(type, text, edit, "#text", columns, 22);}
form[type = 'grammatical-information-for-gender']:before{content: "\00000AIndicaţii pentru gen" oxy_editor(type, button, actionID, "addGrammaticalInformationForGenderSection", transparent, true);}
form[type = 'grammatical-information-for-gender']:not( :first-of-type):before{content: "\00000AIndicaţii pentru gen" oxy_editor(type, button, actionID, "addGrammaticalInformationForGenderSection", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
form[type = 'grammatical-information-for-verb']:before{content: "\00000AIndicaţii pentru verb" oxy_editor(type, button, actionID, "addGrammaticalInformationForVerbSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstStressElement", visible, oxy_xpath("count(stress) = 0"))  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false);}
form[type = 'grammatical-information-for-verb']:not( :first-of-type):before{content: "\00000AIndicaţii pentru verb" oxy_editor(type, button, actionID, "addGrammaticalInformationForVerbSection", transparent, true)  oxy_editor(type, button, actionID, "insertFirstStressElement", visible, oxy_xpath("count(stress) = 0"))  oxy_editor(type, button, actionID, "insertFirstUsgElement", visible, oxy_xpath("count(usg) = 0"))  oxy_editor(type, button, actionID, "insertFirstBiblElement", visible, oxy_xpath("count(bibl) = 0"), showIcon, false)  oxy_editor(type, button, actionID, "deleteElement", transparent, true);}
sense:before{content: oxy_editor(type, button, actionID, "addGramGrp", showIcon, false)  oxy_editor(type, button, actionID, "insertReference");}
sense > idno:first-of-type{content: "Nivel: " oxy_editor(type, combo, edit, "@n", values, "◊,♦", labels, "◊,♦", columns, 17, editable, true);}
idno[n = 'tip-unitate-semantică-subsumată']{content: "Unitate semantică subsumată: " oxy_editor(type, popupSelection, edit, "@type", values, "proverb,saying,riddle,sibyl,syntagma,phrase,compound,adjectival-locution,adverbial-locution,prepositional-locution,conjunctional-locution,verbal-locution", labels, "proverb,zicătoare,cimilitură,ghicitoare,sintagmă,expresie,compus,loc. adj.,loc. adv.,loc. prep.,loc. conj.,loc. vb.", columns, 40, selectionMode, "multiple");}
sense > form[type = 'unitate-semantică-subsumată']:before{content: "Conținut unitate semantică subsumată: " oxy_editor(type, text, edit, "#text", columns, 81);}
idno[n = 'tip-proces-semantic']{content: "Procese semantice: " oxy_editor(type, combo, edit, "@type", values, "unknown,abstr.,concr.,fig.,p.-analogie,p.-analogie-cu,p.-ext.,p.-gener.,p.-restr.,p.-spec.,prin-lărgirea-sensului", labels, ",abstr.,concr.,fig.,p. analogie,p. analogie cu,p. ext.,p. gener.,p. restr.,p. spec.,prin lărgirea sensului", columns, 22, editable, false);}
author:before{content: "Redactor*: " oxy_editor(type, combo, edit, "#text", values, "guest,anghelina.alexandru,monica.busuioc,Dana-Melania,victor.celac,marius.clim,Catalina.Corbeanu,garofitad,mioara.dragomir,cristina.florescu,igeana,Gabriela_Haja,Lilianah,laura.manea,mihaela.marin,Nicoleta,Catamara,r_nedea,Anabella,msmihaelap,vozduh,madalin.patrascu,FlorinSterian,isabelle.tamba,tests,Radu,monica.vasileanu,FlorinV", labels, ",Anghelina Alexandru,Busuioc Monica,Bădic Dana-Melania,Celac Victor,Clim Marius,Corbeanu Ramona Catalina,Dincă Garofița,Dragomir Mioara,Florescu Cristina,Geană Ionuț,Haja Gabriela,Hoinărescu Liliana,Manea Laura,Marin Mihaela,Mihai Nicoleta,Mărănduc Cătălina,Nedea Raluca-Mihaela,Niculescu-Gorpin Anabella-Gloria,Popescu Mihaela,Popuşoi Carolina,Pătrașcu Mădălin,Sterian Florin,Tamba Isabella,Teste,Trif Radu-Nicolae,Vasileanu Monica,Vasilescu Florin", columns, 22, editable, false)  oxy_editor(type, button, actionID, "insertAuthorElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/author) > 1"));}
editor:before{content: "Revizor*: " oxy_editor(type, combo, edit, "#text", values, "guest", labels, "guest", columns, 22, editable, false)  oxy_editor(type, button, actionID, "insertEditorElement", transparent, true)  oxy_editor(type, button, actionID, "deleteElement", transparent, true, visible, oxy_xpath("count(parent::*/editor) > 1"));}
creation{content: "Creat: ";}
creation > date{content: oxy_xpath("concat(substring(@when-iso, 1, 22), ':', substring(@when-iso, 23))");}
revisionDesc{content: "Jurnal modificări";}
change{content: "Modificat: " oxy_xpath("concat(substring(@when, 1, 22), ':', substring(@when, 23))");}
entry > form[type = 'main']:after{content: oxy_editor(rendererClassName, "ro.dlri.oxygen.templates.tree.TreeFormControl", swingEditorClassName, "ro.dlri.oxygen.templates.tree.TreeFormControl", edit, "#text", width, "1100", height, "350", itemLabel, "concat(idno[1]/@n, ' ', if (form) then concat(form, ' =') else (), ' ', string-join(def, ' '))");}
syll{content: "Despărțire în silabe: " oxy_editor(type, text, edit, "#text", columns, 40);}
def{content: oxy_editor(type, button, actionID, "insertUsgElement", showIcon, false)  oxy_editor(type, button, actionID, "insertSynonym", showIcon, false)  oxy_editor(type, button, actionID, "insertAnalogy", showIcon, false)  oxy_editor(type, button, actionID, "insertAssociation", showIcon, false)  oxy_editor(type, button, actionID, "insertAntonym", showIcon, false) "\00000A" oxy_editor(type, textArea, edit, "#text", columns, 70, rows, 7, contentType, "text/plain")  oxy_editor(type, button, actionID, "insertDefElement", transparent, true)  oxy_editor(type, button, actionID, "deleteDefElement", transparent, true, visible, oxy_xpath("count(parent::*/def) > 1"));}
entry > form[type = 'main'] > orth:before{content: "Cuvânt titlu*: " oxy_editor(rendererClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", swingEditorClassName, "ro.kuberam.oxygen.addonBuilder.templates.java.richTextArea.RichTextAreaFormControl", edit, "#text", cols, "700", insertChars, "Á,É,Í,Ó,Ú,Ắ,Ấ,Î", rows, 55) "\00000ANumăr ordine omonime: " oxy_editor(type, text, edit, "@n", columns, 2)  oxy_editor(type, button, actionID, "simpleAction68c93560e17d451887a6b00e4ce9155d");}
sense > form:before{content: oxy_editor(type, text, edit, "#text", columns, 108);}
